name: CI

on:
  push:

jobs:
  test:

    strategy:
      matrix:
        python-version: [3.6]
        os: [windows-latest]  # [macos-latest, windows-latest]
        poetry-version: [1.0.5]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      # - uses: actions/setup-python@v2
      #   with:
      #     python-version: ${{ matrix.python-version }}
      # - name: Run image
      #   uses: abatilo/actions-poetry@v2.0.0
      #   with:
      #     poetry-version: ${{ matrix.poetry-version }}
      
      # - name: Poetry install
      #   run: poetry install

      - name: Configure AWS CREDENTIALS Dir (Windows)
        env:
          CREDENTIALS_FILE_CONTENTS : ${{ secrets.AWS_CREDENTIALS_FILE_CONTENTS }}
        if: contains(matrix.os, 'windows')
        shell: cmd
        run: |
          mkdir "%USERPROFILE%\.aws"
          echo "SETUP on Windows complete %USERPROFILE%\.aws\credentials"
      
      - name: Configure AWS CREDENTIALS file (Windows)
        env:
          CREDENTIALS_FILE_CONTENTS : ${{ secrets.AWS_CREDENTIALS_FILE_CONTENTS }}
        if: contains(matrix.os, 'windows')
        shell: cmd
        run: |
          python tests\load_credentials.py

      - name: Configure AWS CREDENTIALS FILE (macOS)
        env:
          CREDENTIALS_FILE_CONTENTS : ${{ secrets.AWS_CREDENTIALS_FILE_CONTENTS }}
        if: contains(matrix.os, 'macOS')
        run: |
          mkdir ~/.aws
          echo "$CREDENTIALS_FILE_CONTENTS" > ~/.aws/credentials
          echo "$CREDENTIALS_FILE_CONTENTS" > ~/.aws/credentials.copy
          echo "SETUP on macOS complete"
      
      # - name: Poetry test
      #   run: poetry run pytest .




